{"version":3,"sources":["webpack:///./src/app/objective/create-objective/create-objective.component.css","webpack:///./src/app/objective/create-objective/create-objective.component.html","webpack:///./src/app/objective/create-objective/create-objective.component.ts","webpack:///./src/app/objective/objective-list/objective-list.component.css","webpack:///./src/app/objective/objective-list/objective-list.component.html","webpack:///./src/app/objective/objective-list/objective-list.component.ts","webpack:///./src/app/objective/objective.module.ts","webpack:///./src/app/objective/objective.routes.ts"],"names":[],"mappings":"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","file":"objective-objective-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div class=\\\"container mtl\\\">\\n    <div class=\\\"col-lg-offset-2 col-lg-8\\\">\\n        <h2>Create New Objective</h2>\\n    </div>\\n    <mat-card class=\\\"col-lg-offset-2 col-lg-8\\\">\\n        <form [formGroup]=\\\"form\\\">\\n            <div class=\\\"row\\\">\\n                <mat-form-field class=\\\"col-lg-12\\\">\\n                    <input matInput placeholder=\\\"Objective Name\\\" formControlName=\\\"name\\\">\\n                    <mat-error *ngIf=\\\"form?.controls?.name?.hasError('required')\\\">\\n                        Objective name is required!\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <mat-form-field class=\\\"col-lg-12\\\">\\n                    <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" rows=\\\"5\\\"></textarea>\\n                    <mat-error *ngIf=\\\"form?.controls?.name?.hasError('required')\\\">\\n                        Objective description is required!\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"row mtl\\\">\\n                <div class=\\\"col-lg-3\\\">\\n                    <h3>Key Results</h3>\\n                </div>\\n                <div class=\\\"col-lg-offset-7 col-lg-2\\\">\\n                    <h3><button class=\\\"btn btn-success btn-sm\\\" (click)=\\\"addKeyResult()\\\">add new</button></h3>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div formArrayName=\\\"keyResults\\\" class=\\\"col-lg-12\\\">\\n                    <div *ngFor=\\\"let keyResult of keyResults.controls; index as i\\\">\\n                        <div class=\\\"row mtl\\\">\\n                            <div class=\\\"col-lg-10\\\">\\n                                <input matInput [formControlName]=\\\"i\\\" placeholder=\\\"key result {{i+1}}\\\">\\n                                <mat-error *ngIf=\\\"keyResult?.hasError('required')\\\">\\n                                    Key result is required!\\n                                </mat-error>\\n                            </div>\\n                            <div class=\\\"col-lg-2\\\" *ngIf=\\\"keyResults?.controls?.length > 1\\\">\\n                                <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removeKeyResult(i)\\\">remove</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row mtl\\\"></div>\\n            <div class=\\\"row mtl\\\">\\n                <button mat-raised-button color=\\\"primary\\\" class=\\\"col-lg-12\\\" (click)=\\\"create()\\\" [disabled]=\\\"!form?.valid\\\">\\n                    Create Objective\\n                </button>\\n            </div>\\n        </form>\\n    </mat-card>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { FormGroup, FormControl, FormArray, Validators } from \"@angular/forms\";\nimport { AngularFireDatabase } from \"angularfire2/database\";\nimport { User } from \"firebase/app\";\nimport { StorageService } from \"../../shared/services/storage/storage.service\";\nimport { EventsService, GLOBAL_EVENTS } from \"../../shared/services/events.service/events.service\";\nimport { UUID } from \"../../shared/models/uuid.model\";\n\n@Component({\n    selector: \"app-create-objective\",\n    templateUrl: \"./create-objective.component.html\",\n    styleUrls: [\"./create-objective.component.css\"]\n})\nexport class CreateObjectiveComponent implements OnInit {\n\n    public form: FormGroup;\n    public user: User;\n    public selectedObjective: any;\n\n    public constructor(\n        private _Router: Router,\n        private _ActivatedRoute: ActivatedRoute,\n        private _StorageService: StorageService,\n        private _EventsService: EventsService,\n        private _AngularFireDatabase: AngularFireDatabase\n    ) { }\n\n    get keyResults(): FormArray { return this.form.get('keyResults') as FormArray; }\n\n    public ngOnInit(): void {\n        this.user = this._StorageService.getItem(\"user\", \"local\") as User;\n        if (this._ActivatedRoute.snapshot.queryParams.id) {\n            const objectives: any = this._StorageService.getItem(\"objectives\", \"local\") as any[];\n            this.selectedObjective = objectives[this._ActivatedRoute.snapshot.queryParams.id];\n            this.form = new FormGroup({\n                name: new FormControl(this.selectedObjective.name, [Validators.required]),\n                description: new FormControl(this.selectedObjective.description, [Validators.required]),\n                keyResults: new FormArray(this.selectedObjective.keyResults.reduce((array, keyResult) => {\n                    array.push(new FormControl(keyResult, [Validators.required]));\n                    return array;\n                }, []))\n            });\n        } else {\n            this.form = new FormGroup({\n                name: new FormControl(\"\", [Validators.required]),\n                description: new FormControl(\"\", [Validators.required]),\n                keyResults: new FormArray([new FormControl(null, [Validators.required])])\n            });\n        }\n    }\n\n    public addKeyResult(): any {\n        this.keyResults.push(new FormControl(null, [Validators.required]));\n    }\n\n    public removeKeyResult(index): any {\n        this.keyResults.removeAt(index);\n    }\n\n    public async create(): Promise<any> {\n        if (this.form.valid) {\n            if (this._ActivatedRoute.snapshot.queryParams.id) {\n                await this._AngularFireDatabase\n                    .database\n                    .ref(`objectives/${this.user.uid}/${this.selectedObjective.id}`)\n                    .set({ uid: this.user.uid, id: this.selectedObjective.id, ...this.form.value })\n            } else {\n                const id = UUID.generate();\n                await this._AngularFireDatabase\n                    .database\n                    .ref(`objectives/${this.user.uid}/${id}`)\n                    .set({ uid: this.user.uid, id: id, ...this.form.value });\n            }\n            this._Router.navigate([\"/ogile/objectives\"]);\n        }\n    }\n}\n","module.exports = \"table {\\n    width: 100%;\\n}\"","module.exports = \"<div class=\\\"container mtl\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-3\\\">\\n            <h2>Objective List</h2>\\n        </div>\\n        <div class=\\\"col-lg-offset-7 col-lg-2\\\">\\n            <h2>\\n                <a routerLink=\\\"/ogile/objectives/create\\\" class=\\\"btn btn-success\\\">Add New Objective</a>\\n            </h2>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <table mat-table [dataSource]=\\\"objectives\\\" class=\\\"mat-elevation-z8\\\">\\n                <ng-container matColumnDef=\\\"_id\\\">\\n                    <th mat-header-cell *matHeaderCellDef> No. </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element._id}} </td>\\n                </ng-container>\\n                <ng-container matColumnDef=\\\"summary\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Objective Summary </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.summary}} </td>\\n                </ng-container>\\n                <ng-container matColumnDef=\\\"keyResults\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Key Results </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.keyResults}} </td>\\n                </ng-container>\\n                <ng-container matColumnDef=\\\"stories\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Stories </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.stories}} </td>\\n                </ng-container>\\n                <ng-container matColumnDef=\\\"action\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Action </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\">\\n                        <a class=\\\"btn btn-primary btn-small\\\" routerLink=\\\"/ogile/objectives/create\\\" [queryParams]=\\\"{id: element.id}\\\">details</a>\\n                    </td>\\n                </ng-container>\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n            </table>\\n        </div>\\n        <div class=\\\"col-lg-12 mtl text-center\\\" *ngIf=\\\"!objectives || objectives?.length <= 0\\\">\\n            No objectives added yet!\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { MatSnackBar } from \"@angular/material\";\nimport { AngularFireDatabase } from \"angularfire2/database\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { User } from \"firebase/app\";\nimport { EventsService, GLOBAL_EVENTS } from \"../../shared/services/events.service/events.service\";\nimport { StorageService } from \"../../shared/services/storage/storage.service\";\n\n@Component({\n    selector: \"app-objective-list\",\n    templateUrl: \"./objective-list.component.html\",\n    styleUrls: [\"./objective-list.component.css\"]\n})\nexport class ObjectiveListComponent implements OnInit {\n\n    public displayedColumns: string[];\n    public objectives = [];\n    public user: User;\n\n    public constructor(\n        private _Router: Router,\n        private _StorageService: StorageService,\n        private _EventsService: EventsService,\n        private _MatSnackBar: MatSnackBar,\n        private _AngularFireDatabase: AngularFireDatabase,\n        private _AngularFireAuth: AngularFireAuth\n    ) { }\n\n    public async ngOnInit(): Promise<void> {\n        this.user = this._StorageService.getItem(\"user\", \"local\") as User;\n        this.displayedColumns = [\"_id\", \"summary\", \"keyResults\", \"stories\", \"action\"];\n\n        this._AngularFireDatabase\n            .object(`objectives/${this.user.uid}`)\n            .valueChanges()\n            .subscribe((response: any[]) => {\n                response = response || [];\n                this.objectives = Object.values(response).reduce((source, item, index) => {\n                    source.push({\n                        _id: index + 1,\n                        id: item.id,\n                        summary: item.name,\n                        keyResults: item.keyResults.length,\n                        stories: 0\n                    })\n                    return source;\n                }, []);\n                this._StorageService.setItem(\"objectives\", response, \"local\");\n            });\n    }\n}","// angular modules\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\nimport { HttpModule } from \"@angular/http\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\n\n// external modules\nimport { SharedModule } from \"../shared/shared.module\";\n\n// components\nimport { CreateObjectiveComponent } from \"./create-objective/create-objective.component\";\n\n\n// routes (always last)\nimport { Routes } from \"./objective.routes\";\nimport { ObjectiveListComponent } from './objective-list/objective-list.component';\n\n@NgModule({\n    imports: [\n        ReactiveFormsModule,\n        HttpModule,\n        SharedModule,\n        RouterModule.forChild(Routes) //always last\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n    declarations: [\n        CreateObjectiveComponent,\n        ObjectiveListComponent\n    ],\n    providers: [],\n    bootstrap: [CreateObjectiveComponent]\n})\nexport class ObjectiveModule { }","import { Route } from \"@angular/router\";\nimport { AuthGuardService } from \"../shared/services/auth-guard/auth-guard.service\";\nimport { CreateObjectiveComponent } from \"./create-objective/create-objective.component\";\nimport { ObjectiveListComponent } from \"./objective-list/objective-list.component\";\n\nexport let Routes: Array<Route> = [\n    {\n        path: \"\",\n        redirectTo: \"list\",\n        pathMatch: \"full\"\n    },\n    {\n\n        path: \"list\",\n        component: ObjectiveListComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: \"create\",\n        component: CreateObjectiveComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: \":objective_id\",\n        component: CreateObjectiveComponent,\n        canActivate: [AuthGuardService]\n    }\n];"],"sourceRoot":""}