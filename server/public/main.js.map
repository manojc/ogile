{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/app/app.component.css","webpack:///./src/app/app/app.component.html","webpack:///./src/app/app/app.component.ts","webpack:///./src/app/error-page/error-page.component.css","webpack:///./src/app/error-page/error-page.component.html","webpack:///./src/app/error-page/error-page.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/shared/models/api.url.model.ts","webpack:///./src/app/shared/models/user.model.ts","webpack:///./src/app/shared/models/uuid.model.ts","webpack:///./src/app/shared/services/auth-guard/auth-guard.service.ts","webpack:///./src/app/shared/services/events.service/events.service.ts","webpack:///./src/app/shared/services/http-interceptor/http-interceptor.service.ts","webpack:///./src/app/shared/services/logged-in-guard/logged-in-guard.service.ts","webpack:///./src/app/shared/services/storage/storage.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./organisation/organisation.module\": [\n\t\t\"./src/app/organisation/organisation.module.ts\",\n\t\t\"organisation-organisation-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","//angular modules\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\nimport { HttpModule } from \"@angular/http\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\n\n//external modules\nimport { SharedModule } from \"./shared/shared.module\";\n\n//components\nimport { AppComponent } from \"./app/app.component\";\nimport { HomeComponent } from \"./home/home.component\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { RegisterComponent } from \"./register/register.component\";\nimport { ErrorPageComponent } from \"./error-page/error-page.component\";\n\n//routes (always last)\nimport { Routes } from \"./app.routes\";\n\n@NgModule({\n    imports: [\n        ReactiveFormsModule,\n        BrowserModule,\n        HttpModule,\n        BrowserAnimationsModule,\n        SharedModule,\n        RouterModule.forRoot(Routes) //always last\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        LoginComponent,\n        RegisterComponent,\n        ErrorPageComponent\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Route } from \"@angular/router\";\nimport { HomeComponent } from \"./home/home.component\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { RegisterComponent } from \"./register/register.component\";\nimport { ErrorPageComponent } from \"./error-page/error-page.component\";\nimport { LoggedInGuardService } from \"./shared/services/logged-in-guard/logged-in-guard.service\";\nimport { AuthGuardService } from \"./shared/services/auth-guard/auth-guard.service\";\n\nexport let Routes: Array<Route> = [\n    {\n        path: \"\",\n        component: HomeComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: \"organisation\",\n        loadChildren: \"./organisation/organisation.module#OrganisationModule\",\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: \"login\",\n        component: LoginComponent,\n        canActivate: [LoggedInGuardService]\n    },\n    {\n        path: \"register\",\n        component: RegisterComponent,\n        canActivate: [LoggedInGuardService]\n    },\n    {\n        path: \"**\",\n        component: ErrorPageComponent\n    }\n];","module.exports = \".sidenav-container {\\n    height: 100%;\\n}\\n  \\n.sidenav {\\n    width: 200px;\\n}\\n  \\n.mat-toolbar.mat-primary {\\n    position: -webkit-sticky;\\n    position: sticky;\\n    top: 0;\\n    z-index: 9;\\n}\\n  \\nmat-progress-bar {\\n    position: -webkit-sticky;\\n    position: sticky;\\n    top: 65px;\\n    z-index: 9;\\n}\\n  \\n.spacer {\\n    flex: 1 1 auto;\\n}\\n  \\n.side-menu {\\n    font-size: 4rem;\\n}\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n    <mat-sidenav #leftDrawer class=\\\"sidenav\\\">\\n        <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\n        <mat-nav-list>\\n            <a mat-list-item class=\\\"txt-blue\\\" *ngIf=\\\"!!user?.organisationIds && !!user?.organisationIds.length\\\" (click)=\\\"leftDrawer.toggle()\\\" routerLink=\\\"/\\\">\\n                <i class=\\\"material-icons txt-blue mrxs\\\">developer_board</i>\\n                Dashboard\\n            </a>\\n            <a mat-list-item class=\\\"txt-blue\\\" *ngIf=\\\"!!user?.organisationIds && !!user?.organisationIds.length\\\" (click)=\\\"leftDrawer.toggle()\\\" routerLink=\\\"/organisation/{{user.organisationId}}\\\">\\n                <i class=\\\"material-icons txt-blue mrxs\\\">group_work</i>\\n                My Organisation\\n            </a>\\n            <a mat-list-item class=\\\"txt-blue\\\" *ngIf=\\\"!!user?.organisationIds && !!user?.organisationIds.length\\\" (click)=\\\"leftDrawer.toggle()\\\" routerLink=\\\"/team/list\\\">\\n                <i class=\\\"material-icons txt-blue mrxs\\\">group</i>\\n                My Team\\n            </a>\\n            <a mat-list-item class=\\\"txt-blue\\\" *ngIf=\\\"!!user?.organisationIds && !!user?.organisationIds.length\\\" (click)=\\\"leftDrawer.toggle()\\\" routerLink=\\\"/quarters/list\\\">\\n                <i class=\\\"material-icons txt-blue mrxs\\\">dashboard</i>\\n                Quarters\\n            </a>\\n        </mat-nav-list>\\n    </mat-sidenav>\\n    <mat-sidenav-content>\\n        <mat-toolbar class=\\\"mat-primary\\\" color=\\\"primary\\\">\\n            <button *ngIf=\\\"!!user?._id\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"leftDrawer.toggle()\\\">\\n                <mat-icon>menu</mat-icon>\\n            </button>\\n            <button mat-stroked-button color=\\\"basic\\\" (click)=\\\"home()\\\">\\n                <mat-icon class=\\\"material-icons mrxs\\\">home</mat-icon>\\n                Ogile\\n            </button>\\n            <span class=\\\"spacer\\\"></span>\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n                <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\">\\n                <button *ngIf=\\\"!!user?._id\\\" mat-menu-item (click)=\\\"profile()\\\">\\n                    <mat-icon class=\\\"material-icons txt-blue\\\">face</mat-icon>\\n                    <span class=\\\"txt-blue\\\">Profile</span>\\n                </button>\\n                <button *ngIf=\\\"!user?._id\\\" mat-menu-item (click)=\\\"login()\\\">\\n                    <mat-icon class=\\\"material-icons txt-blue\\\">lock</mat-icon>\\n                    <span class=\\\"txt-blue\\\">Login</span>\\n                </button>\\n                <button *ngIf=\\\"!!user?._id\\\" mat-menu-item (click)=\\\"logout()\\\">\\n                    <mat-icon class=\\\"material-icons txt-blue\\\">exit_to_app</mat-icon>\\n                    <span class=\\\"txt-blue\\\">Logout</span>\\n                </button>\\n            </mat-menu>\\n        </mat-toolbar>\\n        <mat-progress-bar *ngIf=\\\"!!showLoader\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n        <div class=\\\"container-fluid\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n        <ng-content>\\n        </ng-content>\\n    </mat-sidenav-content>\\n</mat-sidenav-container>\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { MatSnackBar } from \"@angular/material\";\nimport { HttpInterceptorService } from \"../shared/services/http-interceptor/http-interceptor.service\";\nimport { EventsService, GLOBAL_EVENTS } from \"../shared/services/events.service/events.service\";\nimport { StorageService } from \"../shared/services/storage/storage.service\";\nimport { API_URL } from \"../shared/models/api.url.model\";\nimport { User } from \"../shared/models/user.model\";\n\n@Component({\n    selector: \"app-root\",\n    templateUrl: \"./app.component.html\",\n    styleUrls: [\"./app.component.css\"]\n})\n\nexport class AppComponent implements OnInit, OnDestroy {\n\n    public user: User;\n    public showLoader: boolean;\n    public eventIds: Array<string>;\n\n    public constructor(private _Router: Router,\n        private _Http: HttpInterceptorService,\n        private _StorageService: StorageService,\n        private _EventsService: EventsService,\n        private _MatSnackBar: MatSnackBar) {\n    }\n\n    public ngOnInit(): void {\n        this.bindEvents();\n        this.user = this._StorageService.getItem(\"user\", \"local\") as User;\n    }\n\n    public ngOnDestroy(): void {\n        this.eventIds.forEach((eventId: string) => this._EventsService.off(eventId));\n    }\n\n    public home(): void {\n        this._Router.navigate([\"\"]);\n    }\n\n    public profile(): void {\n        this._Router.navigate([\"profile\"]);\n    }\n\n    public login(): void {\n        this._Router.navigate([!!this.user ? \"\" : \"login\"]);\n    }\n\n    public logout(): void {\n        try {\n            this.user = null;\n            this._StorageService.setItem(\"user\", null, \"local\");\n            this._Router.navigate([\"/login\"]);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    private bindEvents(): void {\n        this.eventIds = [\n            this._EventsService.on(GLOBAL_EVENTS.TOGGLE_LOADER, (showLoader: boolean) => {\n                this.showLoader = showLoader;\n            }),\n            this._EventsService.on(GLOBAL_EVENTS.SET_USER, (user: User) => {\n                this.user = user;\n            }),\n            this._EventsService.on(GLOBAL_EVENTS.SHOW_SNACKBAR, (message: string) => {\n                this._MatSnackBar.open(message, \"close\", {\n                    duration: 3000,\n                    horizontalPosition: \"right\",\n                    verticalPosition: \"bottom\"\n                });\n            }),\n            this._EventsService.on(GLOBAL_EVENTS.SET_ORGANISATION, () => {\n                this.user = this._StorageService.getItem(\"user\", \"local\") as User;\n            })\n        ];\n    }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid mtxl\\\">\\n    <mat-card class=\\\"col-lg-offset-3 col-lg-6 col-md-offset-2 col-md-8 col-sm-offset-1 col-sm-10 col-xs-12\\\">\\n        <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 text-center\\\">\\n            <h1>404</h1>\\n            <h3>Requested page not found!</h3>\\n            <span>Go back to &nbsp;</span>\\n            <a [routerLink]=\\\"['/']\\\">home page</a>\\n        </div>\\n    </mat-card>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-error-page\",\n  templateUrl: \"./error-page.component.html\",\n  styleUrls: [\"./error-page.component.css\"]\n})\nexport class ErrorPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1> Home!!!</h1>\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { StorageService } from \"../shared/services/storage/storage.service\";\nimport { User } from \"../shared/models/user.model\";\n\n@Component({\n    selector: \"app-home\",\n    templateUrl: \"./home.component.html\",\n    styleUrls: [\"./home.component.css\"]\n})\nexport class HomeComponent implements OnInit {\n\n    public user: User;\n\n    public constructor(private _StorageService: StorageService,\n        private _Router: Router) {\n        this.user = this._StorageService.getItem(\"user\", \"local\") as User;\n        if (!this.user || !this.user._id) {\n            this._Router.navigate([\"login\"]);\n        }\n    }\n\n    public ngOnInit(): void {\n    }\n}","module.exports = \".container {\\n    margin-top: 50px;\\n}\"","module.exports = \"<div class=\\\"container-fluid mtxl\\\">\\n    <mat-card class=\\\"col-lg-offset-3 col-lg-6 col-md-offset-2 col-md-8 col-sm-offset-1 col-sm-10 col-xs-12\\\">\\n        <form [formGroup]=\\\"form\\\">\\n            <div class=\\\"row\\\">\\n                <mat-form-field class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\n                    <input matInput placeholder=\\\"Username/Email\\\" formControlName=\\\"username\\\">\\n                    <mat-error>\\n                        username or email is required!\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <mat-form-field class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\n                    <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n                    <mat-error>\\n                        password is required!\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"row mtl\\\">\\n                <button mat-raised-button color=\\\"primary\\\" class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\" (click)=\\\"login()\\\">Login</button>\\n            </div>\\n            <div class=\\\"row mtxs\\\">\\n                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 text-right\\\">\\n                    <span>Not a member yet? &nbsp;</span>\\n                    <a [routerLink]=\\\"['/register']\\\">Register Now!</a>\\n                </div>\\n            </div>\\n        </form>\\n    </mat-card>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { HttpInterceptorService } from \"../shared/services/http-interceptor/http-interceptor.service\";\nimport { EventsService, GLOBAL_EVENTS } from \"../shared/services/events.service/events.service\";\nimport { StorageService } from \"../shared/services/storage/storage.service\";\nimport { API_URL } from \"../shared/models/api.url.model\";\nimport { User } from \"../shared/models/user.model\";\n\n@Component({\n    selector: \"app-login\",\n    templateUrl: \"./login.component.html\",\n    styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n    public form: FormGroup;\n    public user: User;\n\n    public constructor(private _Http: HttpInterceptorService,\n        private _StorageService: StorageService,\n        private _Router: Router,\n        private _EventsService: EventsService) {\n    }\n\n    public ngOnInit(): void {\n        this.form = User.loginForm;\n    }\n\n    public async login(): Promise<void> {\n        if (this.form.valid && this.form.dirty && this.form.touched) {\n            try {\n                const httpResponse = this._Http.post(API_URL.LOGIN_USER, this.form.value);\n                const user: User = await this._Http.toModel(httpResponse);\n                if (!!user && !!user._id) {\n                    this._EventsService.broadcast(GLOBAL_EVENTS.SET_USER, user);\n                    this._StorageService.setItem(\"user\", user, \"local\");\n                    this._Router.navigate([\"/\"]);\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    }\n}","module.exports = \".container {\\n    margin-top: 50px;\\n}\"","module.exports = \"<div class=\\\"container-fluid mtxl\\\">\\n    <mat-card class=\\\"col-lg-offset-3 col-lg-6 col-md-offset-2 col-md-8 col-sm-offset-1 col-sm-10 col-xs-12\\\">\\n        <form [formGroup]=\\\"form\\\">\\n            <div class=\\\"row\\\">\\n                <mat-form-field class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\n                    <input matInput placeholder=\\\"Full Name\\\" formControlName=\\\"name\\\">\\n                    <mat-error *ngIf=\\\"form?.controls?.name?.hasError('required')\\\">\\n                        Name is required\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <mat-form-field class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\n                    <input type=\\\"email\\\" matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n                    <mat-error *ngIf=\\\"form?.controls?.email?.hasError('email') && !form?.controls?.email?.hasError('required')\\\">\\n                        Please enter a valid email address\\n                    </mat-error>\\n                    <mat-error *ngIf=\\\"form?.controls?.email?.hasError('required')\\\">\\n                        Email is required\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <mat-form-field class=\\\"col-lg-8 col-md-12 col-sm-12 col-xs-12\\\">\\n                    <input matInput placeholder=\\\"Username\\\" formControlName=\\\"username\\\">\\n                    <mat-error *ngIf=\\\"form?.controls?.username?.hasError('required')\\\">\\n                        Username is required\\n                    </mat-error>\\n                    <mat-error *ngIf=\\\"form?.controls?.username?.hasError('minlength')\\\">\\n                        Username should be atleast 5 letters long\\n                    </mat-error>\\n                </mat-form-field>\\n                <div class=\\\"mts col-lg-4 col-md-12 col-sm-12 col-xs-12\\\">\\n                    <mat-checkbox #copyEmail [disabled]=\\\"!form?.controls?.email?.valid\\\" (change)=\\\"copyEmailAsUsername(copyEmail)\\\">\\n                        Same As Email\\n                    </mat-checkbox>\\n                </div>\\n            </div>\\n            <!-- <div class=\\\"row\\\">\\n                <mat-form-field class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\n                    <mat-select placeholder=\\\"Select City\\\" formControlName=\\\"city\\\">\\n                        <mat-option value=\\\"Latur\\\" selected>Latur</mat-option>\\n                        <mat-option value=\\\"Pune\\\">Pune</mat-option>\\n                        <mat-option value=\\\"Mumbai\\\">Mumbai</mat-option>\\n                        <mat-option value=\\\"Nagpur\\\">Nagpur</mat-option>\\n                        <mat-option value=\\\"Aurangabad\\\">Aurangabad</mat-option>\\n                    </mat-select>\\n                </mat-form-field>\\n            </div> -->\\n            <div class=\\\"row\\\">\\n                <mat-form-field class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\n                    <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n                    <mat-error *ngIf=\\\"form?.controls?.password?.hasError('required')\\\">\\n                        Password is required\\n                    </mat-error>\\n                    <mat-error *ngIf=\\\"form?.controls?.password?.hasError('minlength')\\\">\\n                        Password should be atleast 6 letters long\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <mat-form-field class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\n                    <input matInput type=\\\"password\\\" placeholder=\\\"Repeat Password\\\" formControlName=\\\"repeatPassword\\\">\\n                    <mat-error *ngIf=\\\"form?.controls?.repeatPassword?.hasError('required')\\\">\\n                        Repeat password is required\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"row mtl\\\">\\n                <button mat-raised-button color=\\\"primary\\\" class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\" (click)=\\\"register()\\\">Register</button>\\n            </div>\\n            <div class=\\\"row mtxs\\\">\\n                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 text-right\\\">\\n                    <span>Already a member? &nbsp;</span>\\n                    <a [routerLink]=\\\"['/login']\\\">Login Here!</a>\\n                </div>\\n            </div>\\n        </form>\\n    </mat-card>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { FormGroup } from \"@angular/forms\";\nimport { User } from \"../shared/models/user.model\";\nimport { HttpInterceptorService } from \"../shared/services/http-interceptor/http-interceptor.service\";\nimport { API_URL } from \"../shared/models/api.url.model\";\nimport { StorageService } from \"../shared/services/storage/storage.service\";\nimport { EventsService, GLOBAL_EVENTS } from \"../shared/services/events.service/events.service\";\n\n@Component({\n    selector: \"app-register\",\n    templateUrl: \"./register.component.html\",\n    styleUrls: [\"./register.component.css\"]\n})\nexport class RegisterComponent implements OnInit {\n\n    public form: FormGroup;\n    public user: User;\n    public passwordMatching: boolean = true;\n\n    public constructor(private _Http: HttpInterceptorService,\n        private _StorageService: StorageService,\n        private _Router: Router,\n        private _EventsService: EventsService) { }\n\n    public ngOnInit(): void {\n        this.form = User.registrationForm;\n    }\n\n    public copyEmailAsUsername(control: HTMLInputElement): void {\n        if (!control) {\n            return;\n        }\n\n        if (control.checked && this.form.controls.email.valid) {\n            this.form.controls.username.setValue(this.form.value.email);\n        }\n    }\n\n    public async register(): Promise<any> {\n        if (this.form.valid && this.form.dirty && this.form.touched) {\n            try {\n                const httpResponse = this._Http.post(API_URL.REGISTER_USER, this.form.value);\n                const user: User = await this._Http.toModel(httpResponse);\n                if (!!user && !!user._id) {\n                    this._EventsService.broadcast(GLOBAL_EVENTS.SET_USER, user);\n                    this._StorageService.setItem(\"user\", user, \"local\");\n                    this._Router.navigate([\"/\"]);\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    }\n}","export const API_URL = {\n    REGISTER_USER: \"/api/user/register\",\n    LOGIN_USER: \"/api/user/login\",\n    LOGGED_IN_USER: \"/api/user/logged-in-user\",\n    LOGOUT: \"/api/user/logout\",\n    CREATE_ORGANISATION: \"/api/organisation/create\",\n    GET_ORGANISATION: \"/api/organisation/${organisationId}\"\n};","import { FormGroup, FormControl, Validators } from \"@angular/forms\";\n\nexport class User {\n    public _id?: string;\n    public organisationIds: Array<string>;\n    public username: string;\n    public name: string;\n    public email: string\n    public password: string;\n    public isAdmin: boolean;\n    public additionalInfo?: Array<any>;\n\n    public static get registrationForm(): FormGroup {\n        return new FormGroup({\n            name: new FormControl(\"\", [\n                Validators.required\n            ]),\n            username: new FormControl(\"\", [\n                Validators.required,\n                Validators.minLength(5)\n            ]),\n            email: new FormControl(\"\", [\n                Validators.required,\n                Validators.email\n            ]),\n            password: new FormControl(\"\", [\n                Validators.required,\n                Validators.minLength(6),\n            ]),\n            repeatPassword: new FormControl(\"\", [\n                Validators.required,\n            ])\n        });\n    }\n\n    public static get loginForm(): FormGroup {\n        return new FormGroup({\n            username: new FormControl(\"\", [\n                Validators.required\n            ]),\n            password: new FormControl(\"\", [\n                Validators.required\n            ])\n        });\n    }\n}","export class UUID {\n    private static lut: Array<string>;\n    public static generate(): string {\n        UUID.buildLUT();\n        let d0: number = Math.random() * 0xffffffff | 0;\n        let d1: number = Math.random() * 0xffffffff | 0;\n        let d2: number = Math.random() * 0xffffffff | 0;\n        let d3: number = Math.random() * 0xffffffff | 0;\n        return UUID.lut[d0 & 0xff] + UUID.lut[d0 >> 8 & 0xff] + UUID.lut[d0 >> 16 & 0xff] + UUID.lut[d0 >> 24 & 0xff] + \"-\" +\n            UUID.lut[d1 & 0xff] + UUID.lut[d1 >> 8 & 0xff] + \"-\" + UUID.lut[d1 >> 16 & 0x0f | 0x40] + UUID.lut[d1 >> 24 & 0xff] + \"-\" +\n            UUID.lut[d2 & 0x3f | 0x80] + UUID.lut[d2 >> 8 & 0xff] + \"-\" + UUID.lut[d2 >> 16 & 0xff] + UUID.lut[d2 >> 24 & 0xff] +\n            UUID.lut[d3 & 0xff] + UUID.lut[d3 >> 8 & 0xff] + UUID.lut[d3 >> 16 & 0xff] + UUID.lut[d3 >> 24 & 0xff];\n    }\n    private static buildLUT(): void {\n        UUID.lut = [];\n        for (let i = 0; i < 256; i++) {\n            UUID.lut[i] = (i < 16 ? \"0\" : \"\") + (i).toString(16);\n        }\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { Router, CanActivate } from \"@angular/router\";\nimport { StorageService } from \"../storage/storage.service\";\nimport { User } from \"../../models/user.model\";\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    constructor(private _Router: Router,\n        private _StorageService: StorageService) { }\n\n    public async canActivate(): Promise<boolean> {\n        try {\n            const user: User = this._StorageService.getItem(\"user\", \"local\") as User;\n            if (!user || !user._id) {\n                this._Router.navigate([\"/login\"]);\n                return Promise.resolve(false);\n            }\n            this._StorageService.setItem(\"user\", user, \"local\");\n            return Promise.resolve(true);\n        } catch (error) {\n            return Promise.reject(false);\n        }\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { Subject, from } from \"rxjs\";\nimport { UUID } from \"../../models/uuid.model\";\n\nexport const GLOBAL_EVENTS = {\n    TOGGLE_LOADER: \"TOGGLE_LOADER\",\n    SHOW_SNACKBAR: \"SHOW_SNACKBAR\",\n    SET_USER: \"SET_USER\",\n    SET_ORGANISATION: \"SET_ORGANISATION\"\n};\n\n/**\n * \n * \n * @class EventListener\n */\nclass EventListener {\n\n    constructor(uuid: string, func: Function) {\n        if (!uuid || !func) {\n            console.error(\"required arguments not provided!\");\n            return;\n        }\n        this._uuid = uuid;\n        this.func = func;\n    }\n\n    private _uuid: string;\n    public get uuid(): string {\n        return this._uuid;\n    }\n\n    public func: Function;\n}\n\n@Injectable()\nexport class EventsService {\n\n    private eventsSubject: Subject<any>;\n    private listeners: Map<string, Array<EventListener>>;\n\n    public constructor() {\n        //initialise listeners\n        this.listeners = new Map();\n        //initialise event subject\n        this.eventsSubject = new Subject();\n        //listen to the changes in subject\n        from(this.eventsSubject)\n            .subscribe(({ name, args }) => {\n                if (this.listeners[name]) {\n                    this.listeners[name].forEach((listener: EventListener) => {\n                        listener.func(...args);\n                    });\n                }\n            });\n    }\n\n    /**\n     * Listens to the event and provides a unique key for the listener\n     * @method on\n     * @param {string} name name of the event to be listened to.\n     * @param {Function} listener listener function with one array argument\n     * @return {string} returns the key (UUID) for listener function which can be used to stop listening to the event.\n     * @memberof EventsService\n    */\n    public on(name: string, listener: Function): string {\n        this.listeners[name] = this.listeners[name] || [];\n        let listenerEvent: EventListener = new EventListener(UUID.generate(), listener);\n        this.listeners[name].push(listenerEvent);\n        return listenerEvent.uuid;\n    }\n\n    /**\n     * Stops listening to the event by using the unique key for the listener\n     * @method off\n     * @param {string} name name of the event to be broadcasted\n     * @param {string} uuid name of the event listener specific uuid to be removed\n     * @param {boolean} [removeAll=false] removes all event listeners attached to specified event name\n     * @returns {void} \n     * @memberof EventsService\n    */\n    public off(name: string, uuid?: string, removeAll: boolean = false): void {\n        if (!this.listeners[name] || !this.listeners[name].length) {\n            return;\n        }\n        if (removeAll) {\n            this.listeners[name] = [];\n            return;\n        }\n        this.listeners[name] = this.listeners[name].filter((item: EventListener, index: number) => {\n            return item.uuid !== uuid;\n        });\n    }\n\n    /**\n     * Broadcasts the event and passes data provided in args argument as event data\n     * @method broadcast\n     * @param {string} name name of the event to be broadcasted.\n     * @param {any} args arguments to be sent with the event.\n     * @return {void} return void\n     * @memberof EventsService\n    */\n    public broadcast(name: string, ...args: Array<any>): void {\n        this.eventsSubject.next({ name, args });\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport { catchError, map, tap, finalize } from \"rxjs/operators\";\nimport {\n    XHRBackend,\n    RequestOptions,\n    Request,\n    RequestOptionsArgs,\n    Response,\n    Http,\n    Headers\n} from \"@angular/http\";\nimport { Response as ApiResponse } from \"../../models/response.model\";\nimport { EventsService, GLOBAL_EVENTS } from \"../events.service/events.service\";\n\n@Injectable()\nexport class HttpInterceptorService extends Http {\n    constructor(private _XHRBackend: XHRBackend,\n        private _RequestOptions: RequestOptions,\n        private _EventsService: EventsService) {\n        super(_XHRBackend, _RequestOptions);\n    }\n\n    public request(url: string | Request, options?: RequestOptionsArgs): Observable<Response> {\n        return this.handleResponse(super.request(url, options));\n    }\n\n    public get(url: string, options?: RequestOptionsArgs): Observable<Response> {\n        this.beforeRequest(url);\n        return super.get(url, this.getRequestOptionArgs(options));\n    }\n\n    public post(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\n        this.beforeRequest(url, body);\n        return super.post(url, body, this.getRequestOptionArgs(options));\n    }\n\n    public put(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\n        this.beforeRequest(url, body);\n        return super.put(url, body, this.getRequestOptionArgs(options));\n    }\n\n    public delete(url: string, options?: RequestOptionsArgs): Observable<Response> {\n        this.beforeRequest(url);\n        return super.delete(url, this.getRequestOptionArgs(options));\n    }\n\n    public async toModel(httpResponse: Observable<Response>): Promise<any> {\n        const response = await httpResponse.toPromise();\n        return JSON.parse(JSON.stringify(response));\n    }\n\n    private getRequestOptionArgs(options?: RequestOptionsArgs): RequestOptionsArgs {\n        if (options == null) {\n            options = new RequestOptions();\n        }\n        if (options.headers == null) {\n            options.headers = new Headers();\n        }\n        options.headers.append(\"Content-Type\", \"application/json\");\n\n        return options;\n    }\n\n    private handleResponse(response: Observable<Response>): Observable<Response> {\n        return response.pipe(\n            map((response) => { return this.processResponse(response) }),\n            catchError(this.onCatch.bind(this)),\n            tap(this.onSuccess.bind(this), this.onError.bind(this)),\n            finalize(this.afterResponse.bind(this))\n        )\n    }\n\n    private processResponse(response: Response): any {\n        const apiresponse: ApiResponse<any> = response.json();\n        if (!apiresponse || !apiresponse.status) {\n            this._EventsService.broadcast(GLOBAL_EVENTS.SHOW_SNACKBAR, apiresponse.messages[0]);\n        }\n        \n        return apiresponse.data;\n    }\n\n    private beforeRequest(url: string, body?: string): void {\n        this._EventsService.broadcast(GLOBAL_EVENTS.TOGGLE_LOADER, true);\n    }\n\n    private afterResponse(): void {\n        this._EventsService.broadcast(GLOBAL_EVENTS.TOGGLE_LOADER, false);\n    }\n\n    private onCatch(error: any, caught: Observable<Response>): Observable<Response> {\n        this._EventsService.broadcast(GLOBAL_EVENTS.SHOW_SNACKBAR, \"Error occurred!\");\n        return throwError(error);\n    }\n\n    private onSuccess(response: ApiResponse<any>): void {\n    }\n\n    private onError(error: any): void {\n        console.error(error);\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { Router, CanActivate } from \"@angular/router\";\nimport { HttpInterceptorService } from \"../http-interceptor/http-interceptor.service\";\nimport { StorageService } from \"../storage/storage.service\";\nimport { API_URL } from \"../../models/api.url.model\";\nimport { User } from \"../../models/user.model\";\n\n@Injectable()\nexport class LoggedInGuardService implements CanActivate {\n\n    constructor(private _Router: Router,\n        private _Http: HttpInterceptorService,\n        private _StorageService: StorageService) { }\n\n    public async canActivate(): Promise<boolean> {\n        try {\n            const user: User = this._StorageService.getItem(\"user\", \"local\") as User;\n            if (!user || !user._id) {\n                return Promise.resolve(true);\n            }\n            this._StorageService.setItem(\"user\", user, \"local\");\n            this._Router.navigate([\"/\"]);\n            return Promise.resolve(false);\n        } catch (error) {\n            return Promise.reject(false);\n        }\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { CookieService } from \"ngx-cookie-service\";\n\ntype storageType = \"local\" | \"session\" | \"cookie\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class StorageService {\n\n    public constructor(private _CookieService: CookieService) { }\n\n    public getItem(key: string, storageType: storageType = \"cookie\"): Object {\n\n        if (!key || !key.trim()) {\n            return null;\n        }\n\n        if (storageType === \"cookie\") {\n            try {\n                return this._CookieService.get(key);\n            } catch (error) {\n                return null;\n            }\n        }\n\n        if (!this.checkStorageSupport()) {\n            return null;\n        }\n\n        let value: any = storageType === \"local\" ? localStorage.getItem(key) : sessionStorage.getItem(key);\n\n        try {\n            value = JSON.parse(value);\n        } catch (error) {\n            return null;\n        }\n\n        return value;\n    }\n\n    public setItem(key: string, value: any, storageType: storageType = \"cookie\"): boolean {\n\n        if (!key || !key.trim()) {\n            return false;\n        }\n\n        value = value || null;\n\n        if (storageType === \"cookie\") {\n            try {\n                this._CookieService.set(key, value);\n                return true;\n            } catch (error) {\n                return false;\n            }\n        }\n\n        if (!this.checkStorageSupport()) {\n            return false;\n        }\n\n        try {\n            value = JSON.stringify(value);\n        } catch (error) { };\n\n        storageType === \"local\" ? localStorage.setItem(key, value) : sessionStorage.setItem(key, value);\n        return true;\n    }\n\n    public setKey(key: string, subKey: string, value: any, storageType: storageType = \"cookie\"): boolean {\n        if (!subKey || !value) {\n            return false;\n        }\n        try {\n            let data: any = this.getItem(key, storageType);\n            data[subKey] = value;\n            this.setItem(key, data, storageType);\n            return true;\n        } catch (error) {\n            return false;\n        }\n    }\n\n    private checkStorageSupport(): boolean {\n        return typeof Storage !== \"undefined\";\n    }\n}","//angular modules\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\n\n//external modules\nimport { LayoutModule } from \"@angular/cdk/layout\";\nimport { MatMenuModule, MatButtonModule, MatIconModule, MatListModule, MatFormFieldModule, MatToolbarModule, MatSidenavModule, MatInputModule, MatCheckboxModule, MatSelectModule, MatCardModule, MatProgressBarModule, MatSnackBarModule } from \"@angular/material\";\n\n//services\nimport { CookieService } from \"ngx-cookie-service\";\nimport { HttpInterceptorService } from \"./services/http-interceptor/http-interceptor.service\";\nimport { StorageService } from \"./services/storage/storage.service\";\nimport { EventsService } from \"./services/events.service/events.service\";\nimport { LoggedInGuardService } from \"./services/logged-in-guard/logged-in-guard.service\";\nimport { AuthGuardService } from \"./services/auth-guard/auth-guard.service\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        LayoutModule,\n        MatToolbarModule,\n        MatSidenavModule,\n        MatButtonModule,\n        MatIconModule,\n        MatListModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatCheckboxModule,\n        MatSelectModule,\n        MatCardModule,\n        MatProgressBarModule,\n        MatSnackBarModule,\n        MatMenuModule\n    ],\n    declarations: [],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n    providers: [\n        CookieService,\n        StorageService,\n        HttpInterceptorService,\n        EventsService,\n        LoggedInGuardService,\n        AuthGuardService\n    ],\n    exports: [\n        CommonModule,\n        LayoutModule,\n        LayoutModule,\n        MatToolbarModule,\n        MatSidenavModule,\n        MatButtonModule,\n        MatIconModule,\n        MatListModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatCheckboxModule,\n        MatSelectModule,\n        MatCardModule,\n        MatProgressBarModule,\n        MatSnackBarModule,\n        MatMenuModule\n    ]\n})\nexport class SharedModule { }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}